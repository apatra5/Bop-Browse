"""create outfit table

Revision ID: 552a22f6a3ed
Revises: eeb6635ad4a0
Create Date: 2025-10-14 16:55:15.254072

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '552a22f6a3ed'
down_revision: Union[str, Sequence[str], None] = 'eeb6635ad4a0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('outfits',
    sa.Column('id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outfits_id'), 'outfits', ['id'], unique=False)
    op.create_table('item_outfit',
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('outfit_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['outfit_id'], ['outfits.id'], ),
    sa.PrimaryKeyConstraint('item_id', 'outfit_id')
    )
    op.alter_column('categories', 'id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('categories_id_seq'::regclass)"))
    op.alter_column('item_category', 'item_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('item_category', 'category_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.drop_constraint(op.f('item_category_item_id_fkey'), 'item_category', type_='foreignkey')
    op.drop_constraint(op.f('item_category_category_id_fkey'), 'item_category', type_='foreignkey')
    op.create_foreign_key(None, 'item_category', 'categories', ['category_id'], ['id'])
    op.create_foreign_key(None, 'item_category', 'items', ['item_id'], ['id'])
    op.alter_column('items', 'id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('items_id_seq'::regclass)"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('items', 'id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('items_id_seq'::regclass)"))
    op.drop_constraint(None, 'item_category', type_='foreignkey')
    op.drop_constraint(None, 'item_category', type_='foreignkey')
    op.create_foreign_key(op.f('item_category_category_id_fkey'), 'item_category', 'categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('item_category_item_id_fkey'), 'item_category', 'items', ['item_id'], ['id'], ondelete='CASCADE')
    op.alter_column('item_category', 'category_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('item_category', 'item_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('categories', 'id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('categories_id_seq'::regclass)"))
    op.drop_table('item_outfit')
    op.drop_index(op.f('ix_outfits_id'), table_name='outfits')
    op.drop_table('outfits')
    # ### end Alembic commands ###
